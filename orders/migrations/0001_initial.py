# Generated by Django 5.1.2 on 2025-10-04 13:11

import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0008_remove_product_address_product_city'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DeliveryAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Recipient's full name", max_length=255)),
                ('phone', models.CharField(help_text='Contact phone number', max_length=15)),
                ('email', models.EmailField(blank=True, help_text='Contact email (optional)', max_length=254, null=True)),
                ('address_line_1', models.CharField(help_text='Street address line 1', max_length=255)),
                ('address_line_2', models.CharField(blank=True, help_text='Street address line 2 (optional)', max_length=255)),
                ('city', models.CharField(help_text='City', max_length=100)),
                ('state', models.CharField(help_text='State', max_length=100)),
                ('pincode', models.CharField(help_text='PIN code', max_length=10)),
                ('landmark', models.CharField(blank=True, help_text='Nearby landmark (optional)', max_length=255)),
                ('delivery_instructions', models.TextField(blank=True, help_text='Special delivery instructions (optional)')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Delivery Address',
                'verbose_name_plural': 'Delivery Addresses',
            },
        ),
        migrations.CreateModel(
            name='OrderAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date for these analytics', unique=True)),
                ('total_orders', models.IntegerField(default=0)),
                ('pending_orders', models.IntegerField(default=0)),
                ('confirmed_orders', models.IntegerField(default=0)),
                ('delivered_orders', models.IntegerField(default=0)),
                ('cancelled_orders', models.IntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('average_order_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('top_products', models.JSONField(blank=True, default=list, help_text='Top selling products')),
                ('top_sellers', models.JSONField(blank=True, default=list, help_text='Top performing sellers')),
                ('top_cities', models.JSONField(blank=True, default=list, help_text='Top cities by order volume')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Order Analytics',
                'verbose_name_plural': 'Order Analytics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.CharField(help_text='Order ID (e.g., KC123456)', max_length=20, primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='UUID for API operations', unique=True)),
                ('customer_name', models.CharField(help_text="Customer's full name at time of order", max_length=255)),
                ('customer_email', models.EmailField(help_text="Customer's email at time of order", max_length=254)),
                ('customer_phone', models.CharField(help_text="Customer's phone at time of order", max_length=15)),
                ('status', models.CharField(choices=[('pending', 'Pending Payment'), ('confirmed', 'Confirmed'), ('processing', 'Processing'), ('packed', 'Packed'), ('shipped', 'Shipped'), ('in_transit', 'In Transit'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('failed', 'Failed')], default='pending', help_text='Current order status', max_length=20)),
                ('order_date', models.DateTimeField(auto_now_add=True, help_text='When the order was placed')),
                ('estimated_delivery', models.DateTimeField(blank=True, help_text='Estimated delivery date and time', null=True)),
                ('actual_delivery', models.DateTimeField(blank=True, help_text='Actual delivery date and time', null=True)),
                ('payment_method', models.CharField(choices=[('card', 'Credit/Debit Card'), ('upi', 'UPI'), ('cod', 'Cash on Delivery'), ('netbanking', 'Net Banking'), ('wallet', 'Digital Wallet')], help_text='Payment method used', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', help_text='Payment status', max_length=20)),
                ('payment_transaction_id', models.CharField(blank=True, help_text='Payment gateway transaction ID', max_length=255, null=True)),
                ('payment_gateway_response', models.JSONField(blank=True, default=dict, help_text='Full payment gateway response')),
                ('subtotal', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Sum of all item totals', max_digits=10)),
                ('shipping_charges', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Shipping and handling charges', max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total discount applied', max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Tax amount', max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Final total amount', max_digits=10)),
                ('coupon_code', models.CharField(blank=True, help_text='Applied coupon code', max_length=50, null=True)),
                ('notes', models.TextField(blank=True, help_text='Customer notes or special instructions')),
                ('admin_notes', models.TextField(blank=True, help_text='Internal admin notes')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional order metadata')),
                ('source', models.CharField(default='web', help_text='Order source (web, mobile, etc.)', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('delivery_address', models.ForeignKey(help_text='Delivery address for this order', on_delete=django.db.models.deletion.PROTECT, to='orders.deliveryaddress')),
                ('user', models.ForeignKey(help_text='Customer who placed the order', on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('product_name', models.CharField(help_text='Product name at time of order', max_length=255)),
                ('product_image', models.URLField(blank=True, help_text='Product image URL', null=True)),
                ('seller_name', models.CharField(help_text='Seller name at time of order', max_length=255)),
                ('quantity', models.DecimalField(decimal_places=2, help_text='Ordered quantity', max_digits=10)),
                ('unit', models.CharField(help_text='Unit of measurement', max_length=20)),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per unit at time of order', max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, help_text='Total price for this item', max_digits=10)),
                ('farm_details', models.JSONField(blank=True, default=dict, help_text='Farm and location details')),
                ('item_status', models.CharField(choices=[('pending', 'Pending Payment'), ('confirmed', 'Confirmed'), ('processing', 'Processing'), ('packed', 'Packed'), ('shipped', 'Shipped'), ('in_transit', 'In Transit'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('failed', 'Failed')], default='confirmed', help_text='Status of this specific item', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Special notes for this item')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(help_text='Order this item belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order')),
                ('product', models.ForeignKey(help_text='Product being ordered', on_delete=django.db.models.deletion.PROTECT, to='products.product')),
                ('seller', models.ForeignKey(help_text='Seller of this product', on_delete=django.db.models.deletion.PROTECT, related_name='sold_items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderRefund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refund_type', models.CharField(choices=[('full', 'Full Refund'), ('partial', 'Partial Refund'), ('shipping_only', 'Shipping Only'), ('product_only', 'Product Only')], default='full', help_text='Type of refund', max_length=20)),
                ('refund_status', models.CharField(choices=[('initiated', 'Refund Initiated'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='initiated', help_text='Refund status', max_length=20)),
                ('refund_amount', models.DecimalField(decimal_places=2, help_text='Amount being refunded', max_digits=10)),
                ('processing_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Processing fee deducted', max_digits=10)),
                ('final_refund_amount', models.DecimalField(decimal_places=2, help_text='Final amount refunded to customer', max_digits=10)),
                ('reason', models.TextField(help_text='Reason for refund')),
                ('refund_transaction_id', models.CharField(blank=True, help_text='Refund transaction ID', max_length=255, null=True)),
                ('estimated_refund_days', models.CharField(default='5-7 business days', help_text='Estimated refund time', max_length=50)),
                ('initiated_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('initiated_by', models.ForeignKey(blank=True, help_text='User who initiated refund', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('order', models.OneToOneField(help_text='Order being refunded', on_delete=django.db.models.deletion.CASCADE, related_name='refund', to='orders.order')),
            ],
            options={
                'verbose_name': 'Order Refund',
                'verbose_name_plural': 'Order Refunds',
            },
        ),
        migrations.CreateModel(
            name='OrderStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending Payment'), ('confirmed', 'Confirmed'), ('processing', 'Processing'), ('packed', 'Packed'), ('shipped', 'Shipped'), ('in_transit', 'In Transit'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('failed', 'Failed')], help_text='Status at this point', max_length=20)),
                ('title', models.CharField(help_text='Human-readable title for this status', max_length=255)),
                ('message', models.TextField(help_text='Detailed message about this status change')),
                ('location', models.CharField(blank=True, help_text='Location where status changed', max_length=255)),
                ('change_source', models.CharField(default='system', help_text='Source of the change (system, admin, api, etc.)', max_length=50)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional status change metadata')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='When this status change occurred')),
                ('changed_by', models.ForeignKey(blank=True, help_text='User who made this change', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(help_text='Order whose status changed', on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='orders.order')),
            ],
            options={
                'verbose_name': 'Order Status History',
                'verbose_name_plural': 'Order Status Histories',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='OrderTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_number', models.CharField(blank=True, help_text='Carrier tracking number', max_length=100, null=True)),
                ('delivery_partner', models.CharField(blank=True, help_text='Delivery service provider', max_length=100)),
                ('delivery_person_name', models.CharField(blank=True, help_text='Delivery person name', max_length=255)),
                ('delivery_person_phone', models.CharField(blank=True, help_text='Delivery person contact', max_length=15)),
                ('delivery_vehicle_number', models.CharField(blank=True, help_text='Delivery vehicle number', max_length=20)),
                ('current_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('current_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('current_address', models.CharField(blank=True, help_text='Current location address', max_length=500)),
                ('distance_from_customer', models.CharField(blank=True, help_text='Distance from customer location', max_length=50)),
                ('estimated_arrival', models.CharField(blank=True, help_text='Estimated arrival time', max_length=50)),
                ('tracking_metadata', models.JSONField(blank=True, default=dict, help_text='Additional tracking information')),
                ('last_location_update', models.DateTimeField(blank=True, help_text='Last location update time', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.OneToOneField(help_text='Order being tracked', on_delete=django.db.models.deletion.CASCADE, related_name='tracking', to='orders.order')),
            ],
            options={
                'verbose_name': 'Order Tracking',
                'verbose_name_plural': 'Order Tracking Records',
            },
        ),
    ]
